@model UNIFAFIBE.TCC._4Sales.Aplicacao.ViewModel.MetaViewModel

@{
    ViewBag.Title = "Novo";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Novo", "Meta", "POST"))
{
    @Html.AntiForgeryToken()

    <div class="row mt-3">
        <div class="col-lg-12">
            <div class="card border-dark">
                <div class="card-header bg-dark">
                    <span class="h5 text-white">
                        <i class="fas fa-chart-line icone-cadastro"></i>
                        Nova Meta
                    </span>
                </div>
                <div class="card-body">
                    <form action="">
                        <div class="row mt-1">
                            <div class="col-lg-12">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.AntiForgeryToken()

                                @if (Model != null)
                                {
                                    if (Model.ValidationResult != null)
                                    {
                                        var mensagem = "";
                                        foreach (var item in Model.ValidationResult.Erros)
                                        {
                                            mensagem += "<span>" + @item.Message.ToString() + "</span><br />";
                                        }
                                        <div class="alert alert-danger">
                                            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                                <span aria-hidden="true">&times;</span>
                                            </button>
                                            <h4 class="alert-heading">Algo deu errado!</h4>
                                            @Html.Raw(mensagem)
                                        </div>
                                    }
                                }

                                <div class="form-group">
                                    <div class="col-md-2">
                                        @Html.LabelFor(model => model.Valor, htmlAttributes: new { @class = "control-label" }) <span class="span-obrigatorio">*</span>
                                    </div>
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.Valor, new { htmlAttributes = new { @class = "form-control mValor" } })
                                        @Html.ValidationMessageFor(model => model.Valor, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-2">
                                        @Html.LabelFor(model => model.Mes, htmlAttributes: new { @class = "control-label" }) <span class="span-obrigatorio">*</span>
                                    </div>
                                    <div class="col-md-4">
                                        <select name="Mes" id="Mes" class="form-control">
                                            @{
                                                var mesAtual = System.DateTime.Today.Month;
                                            }
                                            <option value="01" @(mesAtual == 1 ? "selected" : "")>Janeiro</option>
                                            <option value="02" @(mesAtual == 2 ? "selected" : "")>Fevereiro</option>
                                            <option value="03" @(mesAtual == 3 ? "selected" : "")>Março</option>
                                            <option value="04" @(mesAtual == 4 ? "selected" : "")>Abril</option>
                                            <option value="05" @(mesAtual == 5 ? "selected" : "")>Maio</option>
                                            <option value="06" @(mesAtual == 6 ? "selected" : "")>Junho</option>
                                            <option value="07" @(mesAtual == 7 ? "selected" : "")>Julho</option>
                                            <option value="08" @(mesAtual == 8 ? "selected" : "")>Agosto</option>
                                            <option value="09" @(mesAtual == 9 ? "selected" : "")>Setembro</option>
                                            <option value="10" @(mesAtual == 10 ? "selected" : "")>Outubro</option>
                                            <option value="11" @(mesAtual == 11 ? "selected" : "")>Novembro</option>
                                            <option value="12" @(mesAtual == 12 ? "selected" : "")>Dezembro</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-2">
                                        @Html.LabelFor(model => model.Ano, htmlAttributes: new { @class = "control-label" }) <span class="span-obrigatorio">*</span>
                                    </div>
                                    <div class="col-md-4">
                                        <select name="Ano" id="Ano" class="form-control">
                                            @{
                                                var anoAtual = System.DateTime.Today.Year;
                                            }
                                            <option value="2014" @(anoAtual == 2014 ? "selected" : "")>2014</option>
                                            <option value="2015" @(anoAtual == 2015 ? "selected" : "")>2015</option>
                                            <option value="2016" @(anoAtual == 2016 ? "selected" : "")>2016</option>
                                            <option value="2017" @(anoAtual == 2017 ? "selected" : "")>2017</option>
                                            <option value="2018" @(anoAtual == 2018 ? "selected" : "")>2018</option>
                                            <option value="2019" @(anoAtual == 2019 ? "selected" : "")>2019</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                    <div class="col-md-12 d-flex justify-content-end">
                        <div>
                            <button type="submit" class="btn btn-primary">Salvar</button>
                            @Html.ActionLink("Cancelar", "Index", "PainelAdministrativo", null, new { @class = "btn btn-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/validations_pt-br")
}